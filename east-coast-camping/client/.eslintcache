[{"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\serviceWorker.js":"2","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\App.js":"3","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\NoMatch.js":"4","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\Home.js":"5","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\Contact.js":"6","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\LoginForm.js":"7","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\MyBookings.js":"8","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\Navbar.js":"9","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\utils\\queries.js":"10","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\Jumbotron\\index.js":"11","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\Profile.js":"12","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\Upcoming.js":"13","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\Completed.js":"14","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\TabNavItem.js":"15","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\TabContent.js":"16"},{"size":342,"mtime":1681042189888,"results":"17","hashOfConfig":"18"},{"size":5344,"mtime":1681042189894,"results":"19","hashOfConfig":"18"},{"size":2087,"mtime":1681097787791,"results":"20","hashOfConfig":"18"},{"size":371,"mtime":1681085640609,"results":"21","hashOfConfig":"18"},{"size":4431,"mtime":1681085640602,"results":"22","hashOfConfig":"18"},{"size":4274,"mtime":1681085640600,"results":"23","hashOfConfig":"18"},{"size":3161,"mtime":1681085640605,"results":"24","hashOfConfig":"18"},{"size":1505,"mtime":1681141955828,"results":"25","hashOfConfig":"18"},{"size":1892,"mtime":1681097787794,"results":"26","hashOfConfig":"18"},{"size":748,"mtime":1681085640615,"results":"27","hashOfConfig":"18"},{"size":234,"mtime":1681085640594,"results":"28","hashOfConfig":"18"},{"size":3110,"mtime":1681097787802,"results":"29","hashOfConfig":"18"},{"size":4194,"mtime":1681138561819,"results":"30","hashOfConfig":"18"},{"size":4681,"mtime":1681137335033,"results":"31","hashOfConfig":"18"},{"size":348,"mtime":1681141791539,"results":"32","hashOfConfig":"18"},{"size":226,"mtime":1681141235891,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"o9461x",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\index.js",[],["73","74"],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\serviceWorker.js",[],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\App.js",["75"],"import { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink, } from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nimport { setContext } from '@apollo/client/link/context';\n\nimport MyBookings from './pages/MyBookings';\nimport Home from './pages/Home';\nimport Contact from './pages/Contact';\nimport Navbar from './components/Navbar';\n\nimport LoginForm from './pages/LoginForm';\nimport NoMatch from './pages/NoMatch';\nimport Profile from './pages/Profile';\n\n\n\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n\n            <Navbar />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/contact\" \n                element={<Contact />} \n              />              \n              <Route \n                path=\"/login\" \n                element={<LoginForm />} \n              />\n              {/* <Route \n\n                path=\"/signup\" \n                element={<Signup />} \n              /> */}\n              <Route \n                path=\"/profile\" \n                element={<Profile />} \n              />\n              <Route \n                path=\"/myBookings\" \n                element={<MyBookings />} \n              />\n              {/* <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              /> */}\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n\n              />\n            </Routes>\n\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\NoMatch.js",[],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\Home.js",["76"],"import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card'; //react-bootstrap\nimport CardGroup from 'react-bootstrap/CardGroup'; //react-bootstrap\n// import Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport '../styles/Home.css'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css' //date-picker css\nimport Button from 'react-bootstrap/Button';\n\n// const SearchCampsite = () => {\n\n\n\n\nexport default function Home() {\n    const [destination, setDestination] = useState('');\n    const [startDate, setStartDate] = useState(null);\n    const [endDate, setEndDate] = useState(null)\n    return (\n        <>\n            <Card className='searchBar-Bg'>\n\n                <Card.Body className='d-flex align-items-center searchBar '>\n                    <label >\n                        <input type=\"text\" placeholder='Search destinations' className='searchInput' value={destination} onChange={(e) => setDestination(e.target.value)} />\n                    </label>\n                    <label>\n                        <DatePicker className='searchInput' placeholderText='pick date' selected={startDate} onChange={date => setStartDate(date)} />\n                    </label>\n                    <label>\n                        <DatePicker className='searchInput' placeholderText='pick date' selected={endDate} onChange={date => setEndDate(date)} />\n                    </label>\n                    <Button style={{ backgroundColor: '#ADFB2F', border: 'none', color: 'black', width: '120px' }} >Search</Button>\n\n                </Card.Body>\n\n            </Card>\n            <Container className='mt-5 text-center'>\n                <h2 className='mb-4'>Welcome to EastCoastCamping</h2>\n\n                <p>Looking for a memorable camping experience? Look no further than EastCoastCamping, where we connect you with the best campsites and outdoor destinations. </p>\n                <p>  Whether you're a seasoned outdoor enthusiast or a first-time camper, our website makes it easy to plan and book your perfect camping trip. </p>\n                <p> Our user-friendly platform makes it easy to find and reserve the perfect campsite for your next outdoor adventure.</p>\n            </Container>\n\n            <CardGroup className='m-5'>\n                <Card className='m-3 border-0 d-flex align-items-center'>\n                    <Card.Img className='campIcons mb-3' variant=\"top\" src=\"https://user-images.githubusercontent.com/112873819/230719877-0c465703-ca37-4dfb-aa15-a6b686b68bef.jpeg\" />\n                    <Card.Body>\n                        <Card.Title>Glamping Sites</Card.Title>\n                    </Card.Body>\n                </Card>\n\n                <Card className='m-3 border-0 d-flex align-items-center'>\n                    <Card.Img className='campIcons mb-3' variant=\"top\" src=\"https://user-images.githubusercontent.com/112873819/230719242-6311a995-9ac6-4008-93a0-369ead1a7f11.png\" />\n                    <Card.Body>\n                        <Card.Title>Cabin Houses</Card.Title>\n                    </Card.Body>\n                </Card>\n\n                <Card className='m-3 border-0 d-flex align-items-center'>\n                    <Card.Img className='campIcons mb-3' variant=\"top\" src=\"https://user-images.githubusercontent.com/112873819/230719243-c67856bd-8a2f-4469-9862-622474a90ad1.png\" />\n                    <Card.Body>\n                        <Card.Title>Tent Sites</Card.Title>\n                    </Card.Body>\n                </Card>\n\n                <Card className='m-3 border-0 d-flex align-items-center'>\n                    <Card.Img className='campIcons mb-3' variant=\"top\" src=\"https://user-images.githubusercontent.com/112873819/230719245-96bbcda8-99d9-4bd7-8e4e-0ec835ba46d5.png\" />\n                    <Card.Body>\n                        <Card.Title>Caravan Sites</Card.Title>\n                    </Card.Body>\n                </Card>\n\n                <Card className='m-3 border-0 d-flex align-items-center'>\n                    <Card.Img className='campIcons mb-3' variant=\"top\" src=\"https://user-images.githubusercontent.com/112873819/230719246-30b5f8ce-1815-4375-a6ae-12d982ce2691.png\" />\n                    <Card.Body>\n                        <Card.Title>Camper Sites</Card.Title>\n                    </Card.Body>\n                </Card>\n\n            </CardGroup>\n\n        </>\n\n\n\n\n\n\n    );\n}\n","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\Contact.js",["77"],"// importing necessary dependencies\nimport React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { Link } from 'react-router-dom';\n// importing style for contact page\n\n\nexport default function Contact() {\n    // create a reference using useRef hook\n    const form = useRef();\n    // to get input data from contact form using useState\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        message: '',\n    });\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    const validateForm = () => {\n        let errors = {};\n        if (!values.name) {\n            errors.name = 'Name is required';\n        }\n        if (!values.email) {\n            errors.email = 'Email is required';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n            errors.email = 'Email is invalid';\n        }\n        if (!values.message) {\n            errors.message = 'Message is required';\n        }\n        setErrors(errors);\n        // check error is zero, if zero, return true \n        return Object.keys(errors).length === 0;\n    };\n\n    // used emailjs template to receive the message directly to my email\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (validateForm()) {\n            emailjs\n                .sendForm(\n                    'service_zezn407',\n                    'template_qo7g4m8',\n                    form.current,\n                    't-dfFqeX4KEVQG46U'\n                )\n                .then(\n                    (result) => {\n                        console.log(result.text);\n                    },\n                    (error) => {\n                        console.log(error.text);\n                    }\n                );\n        }\n    };\n\n    return (\n        <div className=\"container my-1\">\n        {/* <Link to=\"/\">← Go to Home</Link> */}\n        <div className=\"contact-bg vh-100 text-white\">\n            <form\n                ref={form}\n                onSubmit={handleSubmit}\n                className=\"mx-auto col-10 col-md-8 col-lg-6 form-container\"\n            >\n                <h1>Contact</h1>\n                <div className=\"form-group mt-4\">\n                    <label>Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={`form-control ${errors.name ? 'is-invalid' : ''}`}\n                        value={values.name}\n                        onChange={handleChange}\n                    />\n                    {/* to display the error msg if there is no input */}\n                    {/* invalid-feedback is from bootstrap and used to show err msg */}\n                    {errors.name && (\n                        <div className=\"invalid-feedback\">{errors.name}</div>\n                    )}\n                </div>\n\n                <div className=\"form-group mt-4\">\n                    <label>Email</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n                        value={values.email}\n                        onChange={handleChange}\n                    />\n                    {errors.email && (\n                        <div className=\"invalid-feedback\">{errors.email}</div>\n                    )}\n                </div>\n\n                <div className=\"form-group mt-4\">\n                    <label>Message</label>\n                    <textarea\n                        name=\"message\"\n                        className={`form-control textbox-height ${errors.message ? 'is-invalid' : ''\n                            }`}\n                        value={values.message}\n                        onChange={handleChange}\n                    />\n                    {errors.message && (\n                        <div className=\"invalid-feedback\">{errors.message}</div>\n                    )}\n                </div>\n                <input type=\"submit\" value=\"Send\" className=\"btn btn-warning mt-4\" />\n            </form>\n        </div>\n        </div>\n    );\n}\n","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\LoginForm.js",["78"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n// import { LOGIN } from '../utils/mutations';\n\n// import Auth from '../utils/auth';\n// import { useMutation } from \"@apollo/react-hooks\";\n\nconst LoginForm = () => {\n    const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n    const [validated] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    //   const [login, { error }] = useMutation(LOGIN)\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // check if form has everything (as per react-bootstrap docs)\n        const form = event.currentTarget;\n        // if (form.checkValidity() === false) {\n        //     event.preventDefault();\n        //     event.stopPropagation();\n        // }\n\n        // try {\n        //     const { data } = await login({\n        //         variables: { ...userFormData },\n        //     });\n        //     Auth.login(data.login.token);\n        // } catch (err) {\n        //     console.error(err);\n        //     setShowAlert(true);\n        // }\n\n        // setUserFormData({\n        //     username: '',\n        //     email: '',\n        //     password: '',\n        // });\n\n    };\n\n    return (\n        <>\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n                <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n                    Something went wrong with your login credentials!\n                </Alert>\n                <Form.Group>\n                    <Form.Label htmlFor='email'>Email</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Your email'\n                        name='email'\n                        onChange={handleInputChange}\n                        value={userFormData.email}\n                        required\n                    />\n                    <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label htmlFor='password'>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Your password'\n                        name='password'\n                        onChange={handleInputChange}\n                        value={userFormData.password}\n                        required\n                    />\n                    <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n                </Form.Group>\n                <Button\n                    disabled={!(userFormData.email && userFormData.password)}\n                    type='submit'\n                    variant='success'>\n                    Submit\n                </Button>\n            </Form>\n        </>\n    );\n};\n\nexport default LoginForm;\n","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\MyBookings.js",["79","80","81","82","83","84","85"],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\Navbar.js",["86"],"import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport { Link } from 'react-router-dom';\nimport '../styles/Navbar.css'\n\n\nfunction NavTab() {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"white\" className='text-dark'>\n            <Container fluid>\n                <Navbar.Brand>\n                    <img\n                        src=\"https://user-images.githubusercontent.com/112873819/230617279-ee879b3f-5e22-437f-a992-66d5df081bf5.png\"\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                        alt=\"logo\"\n                    />\n                </Navbar.Brand>\n                <Navbar.Brand>𝐄𝐚𝐬𝐭𝐂𝐨𝐚𝐬𝐭𝐂𝐚𝐦𝐩𝐢𝐧𝐠</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"/contact\">Contact</Nav.Link>\n                    </Nav>\n                    <Nav>\n\n                        <Nav.Link href=\"/MyBookings\" className='login' >My Bookings</Nav.Link>\n                        <Nav.Link href=\"/Profile\" className='login' >Profile</Nav.Link>\n                        <Nav.Link href=\"/Login\" className='login' >Login</Nav.Link>\n                        <Nav.Link href=\"/Login\" className='login' >Logout</Nav.Link>                        \n                        <Nav.Link href=\"/signup\" className='sign-up'>signup</Nav.Link>\n\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar >\n    );\n}\n\nexport default NavTab;","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\utils\\queries.js",[],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\Jumbotron\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\pages\\Profile.js",["87","88","89","90","91","92"],"import React from 'react';\nimport {\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBCard,\n  MDBCardText,\n  MDBCardBody,\n  MDBCardImage,\n  MDBBtn,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n  MDBProgress,\n  MDBProgressBar,\n  MDBIcon,\n  MDBListGroup,\n  MDBListGroupItem\n} from 'mdb-react-ui-kit';\n\nexport default function Profile() {\n  return (\n    <section style={{ backgroundColor: '#eee' }}>\n      <MDBContainer className=\"py-5\">\n        <MDBRow>\n          <MDBCol>\n            <MDBBreadcrumb className=\"bg-light rounded-3 p-3 mb-4\">\n              <MDBBreadcrumbItem active>User Profile</MDBBreadcrumbItem>\n            </MDBBreadcrumb>\n          </MDBCol>\n        </MDBRow>\n\n        <MDBRow>\n          <MDBCol lg=\"4\">\n            <MDBCard className=\"mb-4\">\n              <MDBCardBody className=\"text-center\">\n                <MDBCardImage\n                  src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp\"\n                  alt=\"avatar\"\n                  className=\"rounded-circle\"\n                  style={{ width: '150px' }}\n                  fluid />\n                <p className=\"text-muted mb-1\">Full Stack Developer</p>  \n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol lg=\"8\">\n            <MDBCard className=\"mb-4\">\n              <MDBCardBody>\n                <MDBRow>\n                  <MDBCol sm=\"3\">\n                    <MDBCardText>Full Name</MDBCardText>\n                  </MDBCol>\n                  <MDBCol sm=\"9\">\n                    <MDBCardText className=\"text-muted\">Johnatan Smith</MDBCardText>\n                  </MDBCol>\n                </MDBRow>\n                <hr />\n                <MDBRow>\n                  <MDBCol sm=\"3\">\n                    <MDBCardText>Email</MDBCardText>\n                  </MDBCol>\n                  <MDBCol sm=\"9\">\n                    <MDBCardText className=\"text-muted\">example@example.com</MDBCardText>\n                  </MDBCol>\n                </MDBRow>\n                <hr />\n                <MDBRow>\n                  <MDBCol sm=\"3\">\n                    <MDBCardText>Phone</MDBCardText>\n                  </MDBCol>\n                  <MDBCol sm=\"9\">\n                    <MDBCardText className=\"text-muted\">(097) 234-5678</MDBCardText>\n                  </MDBCol>\n                </MDBRow>\n                <hr />\n                <MDBRow>\n                  <MDBCol sm=\"3\">\n                    <MDBCardText>Mobile</MDBCardText>\n                  </MDBCol>\n                  <MDBCol sm=\"9\">\n                    <MDBCardText className=\"text-muted\">(098) 765-4321</MDBCardText>\n                  </MDBCol>\n                </MDBRow>\n                <hr />\n                <MDBRow>\n                  <MDBCol sm=\"3\">\n                    <MDBCardText>Address</MDBCardText>\n                  </MDBCol>\n                  <MDBCol sm=\"9\">\n                    <MDBCardText className=\"text-muted\">Bay Area</MDBCardText>\n                  </MDBCol>\n                </MDBRow>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </section>\n  );\n}","C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\Upcoming.js",["93"],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\Completed.js",[],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\TabNavItem.js",[],"C:\\Users\\Lenovo\\Desktop\\Working\\team-project\\EastCoastCamping\\east-coast-camping\\client\\src\\components\\TabContent.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":3,"column":17,"nodeType":"100","messageId":"101","endLine":3,"endColumn":25},{"ruleId":"98","severity":1,"message":"102","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"103","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":14},{"ruleId":"98","severity":1,"message":"104","line":24,"column":15,"nodeType":"100","messageId":"101","endLine":24,"endColumn":19},{"ruleId":"98","severity":1,"message":"105","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":30},{"ruleId":"98","severity":1,"message":"106","line":1,"column":32,"nodeType":"100","messageId":"101","endLine":1,"endColumn":42},{"ruleId":"98","severity":1,"message":"99","line":1,"column":44,"nodeType":"100","messageId":"101","endLine":1,"endColumn":52},{"ruleId":"98","severity":1,"message":"103","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"107","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":17},{"ruleId":"98","severity":1,"message":"108","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"109","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":20},{"ruleId":"98","severity":1,"message":"103","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":14},{"ruleId":"98","severity":1,"message":"110","line":10,"column":3,"nodeType":"100","messageId":"101","endLine":10,"endColumn":9},{"ruleId":"98","severity":1,"message":"111","line":13,"column":3,"nodeType":"100","messageId":"101","endLine":13,"endColumn":14},{"ruleId":"98","severity":1,"message":"112","line":14,"column":3,"nodeType":"100","messageId":"101","endLine":14,"endColumn":17},{"ruleId":"98","severity":1,"message":"113","line":15,"column":3,"nodeType":"100","messageId":"101","endLine":15,"endColumn":10},{"ruleId":"98","severity":1,"message":"114","line":16,"column":3,"nodeType":"100","messageId":"101","endLine":16,"endColumn":15},{"ruleId":"98","severity":1,"message":"115","line":17,"column":3,"nodeType":"100","messageId":"101","endLine":17,"endColumn":19},{"ruleId":"98","severity":1,"message":"116","line":13,"column":8,"nodeType":"100","messageId":"101","endLine":13,"endColumn":11},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'form' is assigned a value but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'Container' is defined but never used.","'useQuery' is defined but never used.","'QUERY_USER' is defined but never used.","'MDBBtn' is defined but never used.","'MDBProgress' is defined but never used.","'MDBProgressBar' is defined but never used.","'MDBIcon' is defined but never used.","'MDBListGroup' is defined but never used.","'MDBListGroupItem' is defined but never used.","'Tab' is defined but never used.","no-global-assign","no-unsafe-negation"]