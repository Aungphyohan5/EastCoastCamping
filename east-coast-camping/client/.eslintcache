[{"/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/index.js":"1","/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/App.js":"2","/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/serviceWorker.js":"3","/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/pages/Contact.js":"4","/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/pages/Home.js":"5","/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/components/Navbar.js":"6"},{"size":342,"mtime":1681043016609,"results":"7","hashOfConfig":"8"},{"size":1912,"mtime":1681043016609,"results":"9","hashOfConfig":"8"},{"size":5344,"mtime":1681043016610,"results":"10","hashOfConfig":"8"},{"size":4153,"mtime":1681043016610,"results":"11","hashOfConfig":"8"},{"size":3278,"mtime":1681043016610,"results":"12","hashOfConfig":"8"},{"size":3120,"mtime":1681043016609,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jzchvc",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/index.js",[],"/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/App.js",["28"],"import { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink, } from '@apollo/client';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Home from './pages/Home';\nimport Contact from './pages/Contact';\nimport Navbar from './components/Navbar';\nimport { setContext } from '@apollo/client/link/context';\n\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n            <Navbar />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/contact\" \n                element={<Contact />} \n              />              \n              {/* <Route \n                path=\"/login\" \n                element={<Login />} \n              /> */}\n              {/* <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              /> */}\n            </Routes>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/serviceWorker.js",[],"/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/pages/Contact.js",["29"],"// importing necessary dependencies\nimport React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\n// importing style for contact page\n\n\nexport default function Contact() {\n    // create a reference using useRef hook\n    const form = useRef();\n    // to get input data from contact form using useState\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        message: '',\n    });\n    const [errors, setErrors] = useState({});\n\n    // const handleChange = (event) => {\n    //     setValues({\n    //         ...values,\n    //         [event.target.name]: event.target.value,\n    //     });\n    // };\n\n    const validateForm = () => {\n        let errors = {};\n        if (!values.name) {\n            errors.name = 'Name is required';\n        }\n        if (!values.email) {\n            errors.email = 'Email is required';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n            errors.email = 'Email is invalid';\n        }\n        if (!values.message) {\n            errors.message = 'Message is required';\n        }\n        setErrors(errors);\n        // check error is zero, if zero, return true \n        return Object.keys(errors).length === 0;\n    };\n\n    // used emailjs template to receive the message directly to my email\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (validateForm()) {\n            emailjs\n                .sendForm(\n                    'service_zezn407',\n                    'template_qo7g4m8',\n                    form.current,\n                    't-dfFqeX4KEVQG46U'\n                )\n                .then(\n                    (result) => {\n                        console.log(result.text);\n                    },\n                    (error) => {\n                        console.log(error.text);\n                    }\n                );\n        }\n    };\n\n    return (\n        <div className=\"contact-bg vh-100 text-white\">\n            <form\n                ref={form}\n                onSubmit={handleSubmit}\n                className=\"mx-auto col-10 col-md-8 col-lg-6 form-container\"\n            >\n                <h1>Contact</h1>\n                <div className=\"form-group mt-4\">\n                    <label>Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={`form-control ${errors.name ? 'is-invalid' : ''}`}\n                        value={values.name}\n                        // onChange={handleChange}\n                    />\n                    {/* to display the error msg if there is no input */}\n                    {/* invalid-feedback is from bootstrap and used to show err msg */}\n                    {errors.name && (\n                        <div className=\"invalid-feedback\">{errors.name}</div>\n                    )}\n                </div>\n\n                <div className=\"form-group mt-4\">\n                    <label>Email</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n                        value={values.email}\n                        // onChange={handleChange}\n                    />\n                    {errors.email && (\n                        <div className=\"invalid-feedback\">{errors.email}</div>\n                    )}\n                </div>\n\n                <div className=\"form-group mt-4\">\n                    <label>Message</label>\n                    <textarea\n                        name=\"message\"\n                        className={`form-control textbox-height ${errors.message ? 'is-invalid' : ''\n                            }`}\n                        value={values.message}\n                        // onChange={handleChange}\n                    />\n                    {errors.message && (\n                        <div className=\"invalid-feedback\">{errors.message}</div>\n                    )}\n                </div>\n                <input type=\"submit\" value=\"Send\" className=\"btn btn-warning mt-4\" />\n            </form>\n        </div>\n    );\n}\n","/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/pages/Home.js",[],"/Users/gabrielmorris/Desktop/UnbBootcamp/Projects/Project3/east-coast-camping/client/src/components/Navbar.js",[],{"ruleId":"30","severity":1,"message":"31","line":3,"column":17,"nodeType":"32","messageId":"33","endLine":3,"endColumn":25},{"ruleId":"30","severity":1,"message":"34","line":11,"column":20,"nodeType":"32","messageId":"33","endLine":11,"endColumn":29},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setValues' is assigned a value but never used."]